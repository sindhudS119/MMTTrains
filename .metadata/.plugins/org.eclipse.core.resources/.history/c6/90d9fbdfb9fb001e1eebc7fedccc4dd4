package Mmt_TrainStepDefinition;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.time.Duration;
import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

import Mmt_PageFactory.TrainSearchPageFactory;
import Mmt_TrainDriverSetup.DriverTrain;
import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class TrainSearch {
	WebDriver driver;
	 TrainSearchPageFactory pf;
	 WebDriverWait wait= new  WebDriverWait(driver ,Duration.ofSeconds(3));
	@Given("User is on Homepage")
	public void user_is_on_homepage() throws InterruptedException {
		driver=DriverTrain.chromeDriver(); 
	}

	@When("User clicks on the Train option")
	public void user_clicks_on_the_train_option() throws InterruptedException {
		pf=new TrainSearchPageFactory(driver);
	    pf.train();
	    //pf.source();
	}

//	@And("User enters the fromstation,tostation,traveldate, class")
//	public void user_enters_the_fromstation_tostation_traveldate_class(DataTable dataTable) throws AWTException, InterruptedException {
//		List<String> tripDetails = dataTable.asList(String.class);
//		//List<List<String>> tripDetails = dataTable.cells();
//	       tripDetails.remove(0); //As it contains column name
//	       pf.source();
//	       pf.typeFrom(tripDetails.get(0));
//		        Robot r=new Robot();
//		        r.keyPress(KeyEvent.VK_DOWN);
//		        r.keyRelease(KeyEvent.VK_DOWN);
//		        r.keyPress(KeyEvent.VK_ENTER);	       
//		        r.keyRelease(KeyEvent.VK_ENTER);
//		   pf.destination();
//	       pf.typeTo(tripDetails.get(1));
//		        r.keyPress(KeyEvent.VK_DOWN);
//		        r.keyRelease(KeyEvent.VK_DOWN);
//		        r.keyPress(KeyEvent.VK_ENTER);	       
//		        r.keyRelease(KeyEvent.VK_ENTER);
//	       pf.enterDate(tripDetails.get(2));
//	       pf.enterTime(tripDetails.get(3));
	//}

  @When("User enters the {string},{string},{string} and {string}")
   public void user_enters_the_and(String source , String destin, String date, String classnam) throws InterruptedException, AWTException {
	 pf.enterSource(source);
	 pf.enterDest(destin);
	 pf.enterDate(date);
	 pf.classMethod();
    }

	@And("click on search option")
	public void click_on_search_option() {
		pf.searchMethod();
		
		
	}

	@Then("list of train appears")
	public void list_of_train_appears() {
	   System.out.println("page reached");
	}
	
	///--------------------------------------------------------------------------
	//scenario2
	

//@When("User is inside the train page")
//public void user_is_inside_the_train_page() {
//	pf=new TrainSearchPageFactory(driver);
//			pf.train();	
//		    
//}
	
//	@When(" User is inside the train page")
//	public void user_is_inside_the_train_page() {
//		pf=new TrainSearchPageFactory(driver);
//		pf.train();	
	    
//	}
//	@And("User enters same input for {string} and {string}")
//	public void user_enters_same_input_for_and(String source1,String desti1) throws InterruptedException, AWTException {
//		
//		pf.enterSource(source1);
//		pf.enterDest(desti1);
//	    
//	}
//	@And("click on search button")
//	public void click_on_search_button() {
//		pf.searchMethod();
//	
//	}
//	@Then("Error message appears")
//	public void error_message_appears() {
//	    System.out.print("From & To station cannot be the same");
//	}
//-------------------------------------------------------------------------------
	//scenario 2
	@When("User is on the searchpage")
	public void user_is_on_the_searchpage() throws InterruptedException {
		pf=new TrainSearchPageFactory(driver);
	    pf.train();
	    Thread.sleep(2000);
	    pf.searchMeth();
	}
	@And("click on AC filter")
	public void click_on_ac_filter() {
		pf.searchFilter();
	}
	@Then("AC trains are displayed")
	public void ac_trains_are_displayed() {
	   System.out.println("a c trains reached");
	}
	
///--------------------------------------------------------------------------------------
	//Scenario3

	@When("user to click the train option from the homepage")
	public void user_to_click_the_train_option_from_the_homepage() throws InterruptedException {
		pf=new TrainSearchPageFactory(driver);
		pf.train();
	    Thread.sleep(2000);
	}
	@When("User should click on check pnr status")
	public void user_should_click_on_check_pnr_status() {
		pf.checkpnrstatus();
	}
	@When("User should enter the valid pnr number")
	public void user_should_enter_the_valid_pnr_number(DataTable credentials) throws InterruptedException {
		//pf = new TrainSearchPageFactory(driver);
		pf.Clickenterpnr();
	    Thread.sleep(2000);
	   // pf = new TrainSearchPageFactory(driver);
		List<List<String>> cells = credentials.cells();
		 pf.enterpnrnumber(cells.get(0).get(0)); 
	}
	@When("user should click on the check status button")
	public void user_should_click_on_the_check_status_button() throws InterruptedException {
		Thread.sleep(2000);
		pf.checkstatuspnr();
	    
	}
	@Then("user should see the current status of booked tickets")
	public void user_should_see_the_current_status_of_booked_tickets() {
	    System.out.println("check status is successful");
	}
///-------------------------------------------------------------------------------------

@When("user in on the train page")
public void user_in_on_the_train_page() throws InterruptedException {
	pf=new TrainSearchPageFactory(driver);
	pf.train();
    Thread.sleep(2000);
}
@When("user should click on live train status")
public void user_should_click_on_live_train_status() {
	pf.livetrainstatus();
}
@When("user should enter the train number and date of the journey")
public void user_should_enter_the_train_number_and_date_of_the_journey() {
    
}
@When("user should be able to click on check status to the live status of the train")
public void user_should_be_able_to_click_on_check_status_to_the_live_status_of_the_train() {
    
}
@Then("user should be able see the live status of particular train")
public void user_should_be_able_see_the_live_status_of_particular_train() {
    
}

}

